
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocNOTLESSNOTGREATERNOTEQleftPLUSMINUSleftPERCENTSLASHSTARleftASSIGNMENTrightAMPERSANDAMPERSAND ARRAYOF ASSIGNMENT BOTTOM BREAK CBRACKET CFBRACKET COMMA CONST CSQBRACKET FINISH FOREACH LEFT MAIN MINUS NAME NL NOTEQ NOTGREATER NOTLESS NOTZERO NUMBER OBRACKET OFBRACKET OSQBRACKET PERCENT PLUS POINTER PORTAL RETURN RIGHT SEMICOLON SIZEOF SLASH STAR TELEPORT TOP VALUE WHILE ZEROprogram : stategroupstategroup :  stategroup statement\n                    | statementstatement :  declaration SEMICOLON  NL\n                    | assignment SEMICOLON NL\n                    | while NL\n                    | zero  NL\n                    | function NL\n                    | operator SEMICOLON NL\n                    | RETURN expression SEMICOLON\n                    | foreach SEMICOLON NL\n                    | empty NLstatement : declaration  error\n                    | assignment error\n                    | while error\n                    | zero  error\n                    | function error\n                    | operator error\n                    | RETURN expression errordeclaration : type varsdeclaration : type errorvars : NAME COMMA varsvars : assignment_var COMMA varsvars : NAMEvars : assignment_var assignment_var : variable ASSIGNMENT expressionassignment : assignment_var\n        | pointer ASSIGNMENT expressionassignment : variable ASSIGNMENT errorpointer : STAR NAME\n                  | STAR OBRACKET expression CBRACKETvariable : NAME\n         | variable indexindex : OSQBRACKET expression CSQBRACKET index\n                    | OSQBRACKET expression CSQBRACKET type : VALUE\n        | CONST VALUE\n        | POINTER expr_type\n        | CONST POINTER expr_type\n        | POINTER CONST expr_type\n        | CONST POINTER CONST expr_type\n        | ARRAYOF expr_type\n        | CONST ARRAYOF expr_type\n         expr_type :\n        | VALUE\n        | POINTER expr_type\n        | ARRAYOF expr_type\n        expression : variable\n        | al_expression\n        | function_call\n        | operator\n        | SIZEOF OBRACKET variable CBRACKETal_expression : expression PLUS expression\n        | expression MINUS expression\n        | expression PERCENT expression\n        | expression STAR expression\n        | expression SLASH expression\n        | STAR expression\n        | AMPERSAND expression\n        | expression NOTGREATER expression\n        | expression NOTLESS expression\n        | expression NOTEQ expression\n        | NUMBERal_expression : OBRACKET al_expression CBRACKEToperator : TOP\n        | BOTTOM\n        | LEFT\n        | RIGHT\n        | PORTAL\n        | TELEPORT\n        | BREAK\n        | SIZEOF OBRACKET al_expression CBRACKETwhile : while FINISH OFBRACKET  NL stategroup  CFBRACKETwhile : WHILE OBRACKET expression CBRACKET  OFBRACKET  NL stategroup  CFBRACKETwhile : WHILE error zero : ZERO  OBRACKET expression CBRACKET  OFBRACKET  NL stategroup  CFBRACKET\n              | NOTZERO OBRACKET expression CBRACKET  OFBRACKET  NL stategroup  CFBRACKET\n              | ZERO  OBRACKET expression CBRACKET  NL statement\n              | NOTZERO OBRACKET expression CBRACKET  NL statement\n         zero : ZERO error\n        | NOTZERO error\n        function : type funcname OBRACKET parameters CBRACKET  OFBRACKET  NL stategroup  CFBRACKET\n                    | type funcname OBRACKET  CBRACKET OFBRACKET NL stategroup CFBRACKETfunction : type funcname errorfuncname : MAIN\n                     | NAMEforeach : FOREACH NAME function_callforeach : FOREACH errorfunction_call : NAME OBRACKET call_parameters CBRACKET call_parameters :\n                 | call_parameters COMMA expression\n                 | expressionparameters : parameters COMMA parameter\n                      | parameterparameter : type NAMEempty : '
    
_lr_action_items = {'RETURN':([0,2,3,35,37,39,40,41,43,44,45,46,48,61,93,94,96,97,98,113,136,163,174,176,181,182,183,185,187,188,189,190,191,192,],[10,10,-3,-2,-13,-14,-6,-15,-7,-16,-8,-17,-18,-12,-4,-5,-9,-10,-19,-11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'WHILE':([0,2,3,35,37,39,40,41,43,44,45,46,48,61,93,94,96,97,98,113,136,163,174,176,181,182,183,185,187,188,189,190,191,192,],[17,17,-3,-2,-13,-14,-6,-15,-7,-16,-8,-17,-18,-12,-4,-5,-9,-10,-19,-11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'ZERO':([0,2,3,35,37,39,40,41,43,44,45,46,48,61,93,94,96,97,98,113,136,163,174,176,181,182,183,185,187,188,189,190,191,192,],[18,18,-3,-2,-13,-14,-6,-15,-7,-16,-8,-17,-18,-12,-4,-5,-9,-10,-19,-11,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'NOTZERO':([0,2,3,35,37,39,40,41,43,44,45,46,48,61,93,94,96,97,98,113,136,163,174,176,181,182,183,185,187,188,189,190,191,192,],[19,19,-3,-2,-13,-14,-6,-15,-7,-16,-8,-17,-18,-12,-4,-5,-9,-10,-19,-11,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'TOP':([0,2,3,10,35,37,39,40,41,43,44,45,46,48,55,57,58,61,69,70,72,73,75,77,79,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,110,113,118,136,163,166,174,176,181,182,183,185,187,188,189,190,191,192,],[20,20,-3,20,-2,-13,-14,-6,-15,-7,-16,-8,-17,-18,20,20,20,-12,20,20,20,20,20,20,20,20,-4,-5,-9,-10,-19,20,20,20,20,20,20,20,20,20,20,-11,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'BOTTOM':([0,2,3,10,35,37,39,40,41,43,44,45,46,48,55,57,58,61,69,70,72,73,75,77,79,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,110,113,118,136,163,166,174,176,181,182,183,185,187,188,189,190,191,192,],[21,21,-3,21,-2,-13,-14,-6,-15,-7,-16,-8,-17,-18,21,21,21,-12,21,21,21,21,21,21,21,21,-4,-5,-9,-10,-19,21,21,21,21,21,21,21,21,21,21,-11,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'LEFT':([0,2,3,10,35,37,39,40,41,43,44,45,46,48,55,57,58,61,69,70,72,73,75,77,79,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,110,113,118,136,163,166,174,176,181,182,183,185,187,188,189,190,191,192,],[22,22,-3,22,-2,-13,-14,-6,-15,-7,-16,-8,-17,-18,22,22,22,-12,22,22,22,22,22,22,22,22,-4,-5,-9,-10,-19,22,22,22,22,22,22,22,22,22,22,-11,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'RIGHT':([0,2,3,10,35,37,39,40,41,43,44,45,46,48,55,57,58,61,69,70,72,73,75,77,79,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,110,113,118,136,163,166,174,176,181,182,183,185,187,188,189,190,191,192,],[23,23,-3,23,-2,-13,-14,-6,-15,-7,-16,-8,-17,-18,23,23,23,-12,23,23,23,23,23,23,23,23,-4,-5,-9,-10,-19,23,23,23,23,23,23,23,23,23,23,-11,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'PORTAL':([0,2,3,10,35,37,39,40,41,43,44,45,46,48,55,57,58,61,69,70,72,73,75,77,79,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,110,113,118,136,163,166,174,176,181,182,183,185,187,188,189,190,191,192,],[24,24,-3,24,-2,-13,-14,-6,-15,-7,-16,-8,-17,-18,24,24,24,-12,24,24,24,24,24,24,24,24,-4,-5,-9,-10,-19,24,24,24,24,24,24,24,24,24,24,-11,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'TELEPORT':([0,2,3,10,35,37,39,40,41,43,44,45,46,48,55,57,58,61,69,70,72,73,75,77,79,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,110,113,118,136,163,166,174,176,181,182,183,185,187,188,189,190,191,192,],[25,25,-3,25,-2,-13,-14,-6,-15,-7,-16,-8,-17,-18,25,25,25,-12,25,25,25,25,25,25,25,25,-4,-5,-9,-10,-19,25,25,25,25,25,25,25,25,25,25,-11,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'BREAK':([0,2,3,10,35,37,39,40,41,43,44,45,46,48,55,57,58,61,69,70,72,73,75,77,79,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,110,113,118,136,163,166,174,176,181,182,183,185,187,188,189,190,191,192,],[26,26,-3,26,-2,-13,-14,-6,-15,-7,-16,-8,-17,-18,26,26,26,-12,26,26,26,26,26,26,26,26,-4,-5,-9,-10,-19,26,26,26,26,26,26,26,26,26,26,-11,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'SIZEOF':([0,2,3,10,35,37,39,40,41,43,44,45,46,48,55,57,58,61,69,70,72,73,75,77,79,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,110,113,118,136,163,166,174,176,181,182,183,185,187,188,189,190,191,192,],[27,27,-3,54,-2,-13,-14,-6,-15,-7,-16,-8,-17,-18,54,54,54,-12,54,54,54,54,54,54,54,54,-4,-5,-9,-10,-19,54,54,54,54,54,54,54,54,54,54,-11,54,27,27,54,27,27,27,27,27,27,27,27,27,27,27,27,]),'FOREACH':([0,2,3,35,37,39,40,41,43,44,45,46,48,61,93,94,96,97,98,113,136,163,174,176,181,182,183,185,187,188,189,190,191,192,],[28,28,-3,-2,-13,-14,-6,-15,-7,-16,-8,-17,-18,-12,-4,-5,-9,-10,-19,-11,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'NL':([0,2,3,6,7,8,12,35,36,37,38,39,40,41,43,44,45,46,47,48,60,61,74,76,78,93,94,95,96,97,98,113,115,136,158,159,163,170,172,173,174,175,176,177,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,],[-96,-96,-3,40,43,45,61,-2,93,-13,94,-14,-6,-15,-7,-16,-8,-17,96,-18,113,-12,-75,-80,-81,-4,-5,136,-9,-10,-19,-11,-84,-96,174,176,-96,181,182,183,-96,185,-96,-73,187,-96,-96,-96,-78,-96,-79,-96,-96,-96,-96,-96,-96,-83,-74,-76,-77,-82,]),'VALUE':([0,2,3,31,32,33,35,37,39,40,41,43,44,45,46,48,61,83,84,85,87,89,93,94,96,97,98,113,114,129,136,163,169,174,176,181,182,183,185,187,188,189,190,191,192,],[30,30,-3,82,88,88,-2,-13,-14,-6,-15,-7,-16,-8,-17,-18,-12,88,88,88,88,88,-4,-5,-9,-10,-19,-11,30,88,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'CONST':([0,2,3,32,35,37,39,40,41,43,44,45,46,48,61,83,93,94,96,97,98,113,114,136,163,169,174,176,181,182,183,185,187,188,189,190,191,192,],[31,31,-3,87,-2,-13,-14,-6,-15,-7,-16,-8,-17,-18,-12,129,-4,-5,-9,-10,-19,-11,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'POINTER':([0,2,3,31,32,33,35,37,39,40,41,43,44,45,46,48,61,83,84,85,87,89,93,94,96,97,98,113,114,129,136,163,169,174,176,181,182,183,185,187,188,189,190,191,192,],[32,32,-3,83,85,85,-2,-13,-14,-6,-15,-7,-16,-8,-17,-18,-12,85,85,85,85,85,-4,-5,-9,-10,-19,-11,32,85,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'ARRAYOF':([0,2,3,31,32,33,35,37,39,40,41,43,44,45,46,48,61,83,84,85,87,89,93,94,96,97,98,113,114,129,136,163,169,174,176,181,182,183,185,187,188,189,190,191,192,],[33,33,-3,84,89,89,-2,-13,-14,-6,-15,-7,-16,-8,-17,-18,-12,89,89,89,89,89,-4,-5,-9,-10,-19,-11,33,89,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'STAR':([0,2,3,10,20,21,22,23,24,25,26,35,37,39,40,41,43,44,45,46,48,49,50,51,52,53,55,56,57,58,59,61,69,70,71,72,73,75,77,79,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,118,119,121,122,123,124,125,126,135,136,137,138,139,140,141,142,143,144,145,146,148,156,160,163,164,165,166,171,174,176,178,181,182,183,185,187,188,189,190,191,192,],[34,34,-3,57,-65,-66,-67,-68,-69,-70,-71,-2,-13,-14,-6,-15,-7,-16,-8,-17,-18,102,-48,-49,-50,-51,57,-32,57,57,-63,-12,57,57,-33,57,57,57,57,57,57,-4,-5,-9,-10,-19,57,57,57,57,57,57,57,57,57,-49,102,57,-58,-59,-11,57,102,102,102,102,102,102,-49,102,34,102,102,-55,-56,-57,102,102,102,-48,-64,102,-35,-72,34,-52,-89,57,-34,34,34,102,34,34,34,34,34,34,34,34,34,34,]),'NAME':([0,2,3,10,13,28,30,32,33,34,35,37,39,40,41,43,44,45,46,48,55,57,58,61,69,70,72,73,75,77,79,80,82,83,84,85,86,87,88,89,90,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,110,113,116,117,118,129,130,131,132,133,134,136,149,161,163,166,174,176,181,182,183,185,187,188,189,190,191,192,],[29,29,-3,56,65,80,-36,-44,-44,91,-2,-13,-14,-6,-15,-7,-16,-8,-17,-18,56,56,56,-12,56,56,56,56,56,56,56,127,-37,-44,-44,-44,-38,-44,-45,-44,-42,56,-4,-5,-9,-10,-19,56,56,56,56,56,56,56,56,56,56,-11,153,153,56,-44,-39,-43,-46,-40,-47,29,167,-41,29,56,29,29,29,29,29,29,29,29,29,29,29,29,]),'$end':([1,2,3,35,37,39,40,41,43,44,45,46,48,61,93,94,96,97,98,113,],[0,-1,-3,-2,-13,-14,-6,-15,-7,-16,-8,-17,-18,-12,-4,-5,-9,-10,-19,-11,]),'CFBRACKET':([3,35,37,39,40,41,43,44,45,46,48,61,93,94,96,97,98,113,163,188,189,190,191,192,],[-3,-2,-13,-14,-6,-15,-7,-16,-8,-17,-18,-12,-4,-5,-9,-10,-19,-11,177,193,194,195,196,197,]),'SEMICOLON':([4,5,9,11,14,20,21,22,23,24,25,26,49,50,51,52,53,56,59,62,63,65,66,71,81,111,112,119,120,121,128,137,138,139,140,141,142,143,144,146,153,154,155,156,160,164,165,171,],[36,38,47,60,-27,-65,-66,-67,-68,-69,-70,-71,97,-48,-49,-50,-51,-32,-63,-20,-21,-24,-25,-33,-88,-58,-59,-28,-29,-26,-87,-53,-54,-55,-56,-57,-60,-61,-62,-64,-24,-22,-23,-35,-72,-52,-89,-34,]),'error':([4,5,6,7,8,9,13,14,17,18,19,20,21,22,23,24,25,26,28,30,32,33,37,39,40,41,43,44,45,46,48,49,50,51,52,53,56,59,61,62,63,64,65,66,67,70,71,74,76,78,82,83,84,85,86,87,88,89,90,93,94,96,97,98,111,112,113,115,119,120,121,129,130,131,132,133,134,137,138,139,140,141,142,143,144,146,153,154,155,156,160,161,164,165,171,177,184,186,193,194,195,196,197,],[37,39,41,44,46,48,63,-27,74,76,78,-65,-66,-67,-68,-69,-70,-71,81,-36,-44,-44,-13,-14,-6,-15,-7,-16,-8,-17,-18,98,-48,-49,-50,-51,-32,-63,-12,-20,-21,115,-24,-25,-85,120,-33,-75,-80,-81,-37,-44,-44,-44,-38,-44,-45,-44,-42,-4,-5,-9,-10,-19,-58,-59,-11,-84,-28,-29,-26,-44,-39,-43,-46,-40,-47,-53,-54,-55,-56,-57,-60,-61,-62,-64,-24,-22,-23,-35,-72,-41,-52,-89,-34,-73,-78,-79,-83,-74,-76,-77,-82,]),'FINISH':([6,74,177,194,],[42,-75,-73,-74,]),'AMPERSAND':([10,55,57,58,69,70,72,73,75,77,79,92,99,100,101,102,103,104,105,106,107,110,118,166,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'NUMBER':([10,55,57,58,69,70,72,73,75,77,79,92,99,100,101,102,103,104,105,106,107,110,118,166,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'OBRACKET':([10,17,18,19,27,34,54,55,56,57,58,64,65,67,69,70,72,73,75,77,79,92,99,100,101,102,103,104,105,106,107,110,118,127,166,],[55,73,75,77,79,92,107,55,110,55,55,114,-86,-85,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,110,55,]),'MAIN':([13,30,32,33,82,83,84,85,86,87,88,89,90,129,130,131,132,133,134,161,],[67,-36,-44,-44,-37,-44,-44,-44,-38,-44,-45,-44,-42,-44,-39,-43,-46,-40,-47,-41,]),'ASSIGNMENT':([15,16,29,65,68,71,91,153,156,162,171,],[69,70,-32,-32,118,-33,-30,-32,-35,-31,-34,]),'OSQBRACKET':([16,29,50,56,65,68,71,145,153,156,171,],[72,-32,72,-32,-32,72,-33,72,-32,72,-34,]),'PLUS':([20,21,22,23,24,25,26,49,50,51,52,53,56,59,71,108,109,111,112,119,121,122,123,124,125,126,135,137,138,139,140,141,142,143,144,145,146,148,156,160,164,165,171,178,],[-65,-66,-67,-68,-69,-70,-71,99,-48,-49,-50,-51,-32,-63,-33,-49,99,-58,-59,99,99,99,99,99,99,-49,99,-53,-54,-55,-56,-57,99,99,99,-48,-64,99,-35,-72,-52,-89,-34,99,]),'MINUS':([20,21,22,23,24,25,26,49,50,51,52,53,56,59,71,108,109,111,112,119,121,122,123,124,125,126,135,137,138,139,140,141,142,143,144,145,146,148,156,160,164,165,171,178,],[-65,-66,-67,-68,-69,-70,-71,100,-48,-49,-50,-51,-32,-63,-33,-49,100,-58,-59,100,100,100,100,100,100,-49,100,-53,-54,-55,-56,-57,100,100,100,-48,-64,100,-35,-72,-52,-89,-34,100,]),'PERCENT':([20,21,22,23,24,25,26,49,50,51,52,53,56,59,71,108,109,111,112,119,121,122,123,124,125,126,135,137,138,139,140,141,142,143,144,145,146,148,156,160,164,165,171,178,],[-65,-66,-67,-68,-69,-70,-71,101,-48,-49,-50,-51,-32,-63,-33,-49,101,-58,-59,101,101,101,101,101,101,-49,101,101,101,-55,-56,-57,101,101,101,-48,-64,101,-35,-72,-52,-89,-34,101,]),'SLASH':([20,21,22,23,24,25,26,49,50,51,52,53,56,59,71,108,109,111,112,119,121,122,123,124,125,126,135,137,138,139,140,141,142,143,144,145,146,148,156,160,164,165,171,178,],[-65,-66,-67,-68,-69,-70,-71,103,-48,-49,-50,-51,-32,-63,-33,-49,103,-58,-59,103,103,103,103,103,103,-49,103,103,103,-55,-56,-57,103,103,103,-48,-64,103,-35,-72,-52,-89,-34,103,]),'NOTGREATER':([20,21,22,23,24,25,26,49,50,51,52,53,56,59,71,108,109,111,112,119,121,122,123,124,125,126,135,137,138,139,140,141,142,143,144,145,146,148,156,160,164,165,171,178,],[-65,-66,-67,-68,-69,-70,-71,104,-48,-49,-50,-51,-32,-63,-33,-49,104,-58,-59,104,104,104,104,104,104,-49,104,-53,-54,-55,-56,-57,None,None,None,-48,-64,104,-35,-72,-52,-89,-34,104,]),'NOTLESS':([20,21,22,23,24,25,26,49,50,51,52,53,56,59,71,108,109,111,112,119,121,122,123,124,125,126,135,137,138,139,140,141,142,143,144,145,146,148,156,160,164,165,171,178,],[-65,-66,-67,-68,-69,-70,-71,105,-48,-49,-50,-51,-32,-63,-33,-49,105,-58,-59,105,105,105,105,105,105,-49,105,-53,-54,-55,-56,-57,None,None,None,-48,-64,105,-35,-72,-52,-89,-34,105,]),'NOTEQ':([20,21,22,23,24,25,26,49,50,51,52,53,56,59,71,108,109,111,112,119,121,122,123,124,125,126,135,137,138,139,140,141,142,143,144,145,146,148,156,160,164,165,171,178,],[-65,-66,-67,-68,-69,-70,-71,106,-48,-49,-50,-51,-32,-63,-33,-49,106,-58,-59,106,106,106,106,106,106,-49,106,-53,-54,-55,-56,-57,None,None,None,-48,-64,106,-35,-72,-52,-89,-34,106,]),'CBRACKET':([20,21,22,23,24,25,26,50,51,52,53,56,59,71,108,110,111,112,114,123,124,125,126,135,137,138,139,140,141,142,143,144,145,146,147,148,150,152,156,160,164,165,167,171,178,180,],[-65,-66,-67,-68,-69,-70,-71,-48,-49,-50,-51,-32,-63,-33,146,-90,-58,-59,151,157,158,159,160,162,-53,-54,-55,-56,-57,-60,-61,-62,164,-64,165,-92,168,-94,-35,-72,-52,-89,-95,-34,-91,-93,]),'CSQBRACKET':([20,21,22,23,24,25,26,50,51,52,53,56,59,71,111,112,122,137,138,139,140,141,142,143,144,146,156,160,164,165,171,],[-65,-66,-67,-68,-69,-70,-71,-48,-49,-50,-51,-32,-63,-33,-58,-59,156,-53,-54,-55,-56,-57,-60,-61,-62,-64,-35,-72,-52,-89,-34,]),'COMMA':([20,21,22,23,24,25,26,50,51,52,53,56,59,65,66,71,110,111,112,121,137,138,139,140,141,142,143,144,146,147,148,150,152,153,156,160,164,165,167,171,178,180,],[-65,-66,-67,-68,-69,-70,-71,-48,-49,-50,-51,-32,-63,116,117,-33,-90,-58,-59,-26,-53,-54,-55,-56,-57,-60,-61,-62,-64,166,-92,169,-94,116,-35,-72,-52,-89,-95,-34,-91,-93,]),'OFBRACKET':([42,151,157,158,159,168,],[95,170,172,173,175,179,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'stategroup':([0,136,181,182,183,185,187,],[2,163,188,189,190,191,192,]),'statement':([0,2,136,163,174,176,181,182,183,185,187,188,189,190,191,192,],[3,35,3,35,184,186,3,3,3,3,3,35,35,35,35,35,]),'declaration':([0,2,136,163,174,176,181,182,183,185,187,188,189,190,191,192,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'assignment':([0,2,136,163,174,176,181,182,183,185,187,188,189,190,191,192,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'while':([0,2,136,163,174,176,181,182,183,185,187,188,189,190,191,192,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'zero':([0,2,136,163,174,176,181,182,183,185,187,188,189,190,191,192,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'function':([0,2,136,163,174,176,181,182,183,185,187,188,189,190,191,192,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'operator':([0,2,10,55,57,58,69,70,72,73,75,77,79,92,99,100,101,102,103,104,105,106,107,110,118,136,163,166,174,176,181,182,183,185,187,188,189,190,191,192,],[9,9,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,9,9,53,9,9,9,9,9,9,9,9,9,9,9,9,]),'foreach':([0,2,136,163,174,176,181,182,183,185,187,188,189,190,191,192,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'empty':([0,2,136,163,174,176,181,182,183,185,187,188,189,190,191,192,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'type':([0,2,114,136,163,169,174,176,181,182,183,185,187,188,189,190,191,192,],[13,13,149,13,13,149,13,13,13,13,13,13,13,13,13,13,13,13,]),'assignment_var':([0,2,13,116,117,136,163,174,176,181,182,183,185,187,188,189,190,191,192,],[14,14,66,66,66,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'pointer':([0,2,136,163,174,176,181,182,183,185,187,188,189,190,191,192,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'variable':([0,2,10,13,55,57,58,69,70,72,73,75,77,79,92,99,100,101,102,103,104,105,106,107,110,116,117,118,136,163,166,174,176,181,182,183,185,187,188,189,190,191,192,],[16,16,50,68,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,145,50,68,68,50,16,16,50,16,16,16,16,16,16,16,16,16,16,16,16,]),'expression':([10,55,57,58,69,70,72,73,75,77,79,92,99,100,101,102,103,104,105,106,107,110,118,166,],[49,109,111,112,119,121,122,123,124,125,109,135,137,138,139,140,141,142,143,144,109,148,121,178,]),'al_expression':([10,55,57,58,69,70,72,73,75,77,79,92,99,100,101,102,103,104,105,106,107,110,118,166,],[51,108,51,51,51,51,51,51,51,51,126,51,51,51,51,51,51,51,51,51,126,51,51,51,]),'function_call':([10,55,57,58,69,70,72,73,75,77,79,80,92,99,100,101,102,103,104,105,106,107,110,118,166,],[52,52,52,52,52,52,52,52,52,52,52,128,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'vars':([13,116,117,],[62,154,155,]),'funcname':([13,],[64,]),'index':([16,50,68,145,156,],[71,71,71,71,171,]),'expr_type':([32,33,83,84,85,87,89,129,],[86,90,130,131,132,133,134,161,]),'call_parameters':([110,],[147,]),'parameters':([114,],[150,]),'parameter':([114,169,],[152,180,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stategroup','program',1,'p_program','par_Class.py',63),
  ('stategroup -> stategroup statement','stategroup',2,'p_stategroup','par_Class.py',72),
  ('stategroup -> statement','stategroup',1,'p_stategroup','par_Class.py',73),
  ('statement -> declaration SEMICOLON NL','statement',3,'p_statement','par_Class.py',81),
  ('statement -> assignment SEMICOLON NL','statement',3,'p_statement','par_Class.py',82),
  ('statement -> while NL','statement',2,'p_statement','par_Class.py',83),
  ('statement -> zero NL','statement',2,'p_statement','par_Class.py',84),
  ('statement -> function NL','statement',2,'p_statement','par_Class.py',85),
  ('statement -> operator SEMICOLON NL','statement',3,'p_statement','par_Class.py',86),
  ('statement -> RETURN expression SEMICOLON','statement',3,'p_statement','par_Class.py',87),
  ('statement -> foreach SEMICOLON NL','statement',3,'p_statement','par_Class.py',88),
  ('statement -> empty NL','statement',2,'p_statement','par_Class.py',89),
  ('statement -> declaration error','statement',2,'p_statement_error','par_Class.py',96),
  ('statement -> assignment error','statement',2,'p_statement_error','par_Class.py',97),
  ('statement -> while error','statement',2,'p_statement_error','par_Class.py',98),
  ('statement -> zero error','statement',2,'p_statement_error','par_Class.py',99),
  ('statement -> function error','statement',2,'p_statement_error','par_Class.py',100),
  ('statement -> operator error','statement',2,'p_statement_error','par_Class.py',101),
  ('statement -> RETURN expression error','statement',3,'p_statement_error','par_Class.py',102),
  ('declaration -> type vars','declaration',2,'p_declaration','par_Class.py',110),
  ('declaration -> type error','declaration',2,'p_declaration_error','par_Class.py',114),
  ('vars -> NAME COMMA vars','vars',3,'p_vars_icv','par_Class.py',120),
  ('vars -> assignment_var COMMA vars','vars',3,'p_vars_acv','par_Class.py',128),
  ('vars -> NAME','vars',1,'p_vars_name','par_Class.py',134),
  ('vars -> assignment_var','vars',1,'p_vars','par_Class.py',140),
  ('assignment_var -> variable ASSIGNMENT expression','assignment_var',3,'p_assignment_var','par_Class.py',144),
  ('assignment -> assignment_var','assignment',1,'p_assignment','par_Class.py',148),
  ('assignment -> pointer ASSIGNMENT expression','assignment',3,'p_assignment','par_Class.py',149),
  ('assignment -> variable ASSIGNMENT error','assignment',3,'p_assignment_err','par_Class.py',156),
  ('pointer -> STAR NAME','pointer',2,'p_pointer','par_Class.py',162),
  ('pointer -> STAR OBRACKET expression CBRACKET','pointer',4,'p_pointer','par_Class.py',163),
  ('variable -> NAME','variable',1,'p_variable','par_Class.py',170),
  ('variable -> variable index','variable',2,'p_variable','par_Class.py',171),
  ('index -> OSQBRACKET expression CSQBRACKET index','index',4,'p_index','par_Class.py',178),
  ('index -> OSQBRACKET expression CSQBRACKET','index',3,'p_index','par_Class.py',179),
  ('type -> VALUE','type',1,'p_type','par_Class.py',188),
  ('type -> CONST VALUE','type',2,'p_type','par_Class.py',189),
  ('type -> POINTER expr_type','type',2,'p_type','par_Class.py',190),
  ('type -> CONST POINTER expr_type','type',3,'p_type','par_Class.py',191),
  ('type -> POINTER CONST expr_type','type',3,'p_type','par_Class.py',192),
  ('type -> CONST POINTER CONST expr_type','type',4,'p_type','par_Class.py',193),
  ('type -> ARRAYOF expr_type','type',2,'p_type','par_Class.py',194),
  ('type -> CONST ARRAYOF expr_type','type',3,'p_type','par_Class.py',195),
  ('expr_type -> <empty>','expr_type',0,'p_expr_type','par_Class.py',213),
  ('expr_type -> VALUE','expr_type',1,'p_expr_type','par_Class.py',214),
  ('expr_type -> POINTER expr_type','expr_type',2,'p_expr_type','par_Class.py',215),
  ('expr_type -> ARRAYOF expr_type','expr_type',2,'p_expr_type','par_Class.py',216),
  ('expression -> variable','expression',1,'p_expression','par_Class.py',224),
  ('expression -> al_expression','expression',1,'p_expression','par_Class.py',225),
  ('expression -> function_call','expression',1,'p_expression','par_Class.py',226),
  ('expression -> operator','expression',1,'p_expression','par_Class.py',227),
  ('expression -> SIZEOF OBRACKET variable CBRACKET','expression',4,'p_expression','par_Class.py',228),
  ('al_expression -> expression PLUS expression','al_expression',3,'p_al_expression','par_Class.py',235),
  ('al_expression -> expression MINUS expression','al_expression',3,'p_al_expression','par_Class.py',236),
  ('al_expression -> expression PERCENT expression','al_expression',3,'p_al_expression','par_Class.py',237),
  ('al_expression -> expression STAR expression','al_expression',3,'p_al_expression','par_Class.py',238),
  ('al_expression -> expression SLASH expression','al_expression',3,'p_al_expression','par_Class.py',239),
  ('al_expression -> STAR expression','al_expression',2,'p_al_expression','par_Class.py',240),
  ('al_expression -> AMPERSAND expression','al_expression',2,'p_al_expression','par_Class.py',241),
  ('al_expression -> expression NOTGREATER expression','al_expression',3,'p_al_expression','par_Class.py',242),
  ('al_expression -> expression NOTLESS expression','al_expression',3,'p_al_expression','par_Class.py',243),
  ('al_expression -> expression NOTEQ expression','al_expression',3,'p_al_expression','par_Class.py',244),
  ('al_expression -> NUMBER','al_expression',1,'p_al_expression','par_Class.py',245),
  ('al_expression -> OBRACKET al_expression CBRACKET','al_expression',3,'p_al_expression_group','par_Class.py',254),
  ('operator -> TOP','operator',1,'p_operator','par_Class.py',258),
  ('operator -> BOTTOM','operator',1,'p_operator','par_Class.py',259),
  ('operator -> LEFT','operator',1,'p_operator','par_Class.py',260),
  ('operator -> RIGHT','operator',1,'p_operator','par_Class.py',261),
  ('operator -> PORTAL','operator',1,'p_operator','par_Class.py',262),
  ('operator -> TELEPORT','operator',1,'p_operator','par_Class.py',263),
  ('operator -> BREAK','operator',1,'p_operator','par_Class.py',264),
  ('operator -> SIZEOF OBRACKET al_expression CBRACKET','operator',4,'p_operator','par_Class.py',265),
  ('while -> while FINISH OFBRACKET NL stategroup CFBRACKET','while',6,'p_while_finish','par_Class.py',272),
  ('while -> WHILE OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET','while',8,'p_while','par_Class.py',276),
  ('while -> WHILE error','while',2,'p_while_error','par_Class.py',280),
  ('zero -> ZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET','zero',8,'p_zero','par_Class.py',286),
  ('zero -> NOTZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET','zero',8,'p_zero','par_Class.py',287),
  ('zero -> ZERO OBRACKET expression CBRACKET NL statement','zero',6,'p_zero','par_Class.py',288),
  ('zero -> NOTZERO OBRACKET expression CBRACKET NL statement','zero',6,'p_zero','par_Class.py',289),
  ('zero -> ZERO error','zero',2,'p_zero_error','par_Class.py',297),
  ('zero -> NOTZERO error','zero',2,'p_zero_error','par_Class.py',298),
  ('function -> type funcname OBRACKET parameters CBRACKET OFBRACKET NL stategroup CFBRACKET','function',9,'p_function','par_Class.py',305),
  ('function -> type funcname OBRACKET CBRACKET OFBRACKET NL stategroup CFBRACKET','function',8,'p_function','par_Class.py',306),
  ('function -> type funcname error','function',3,'p_function_error','par_Class.py',322),
  ('funcname -> MAIN','funcname',1,'p_funcname','par_Class.py',328),
  ('funcname -> NAME','funcname',1,'p_funcname','par_Class.py',329),
  ('foreach -> FOREACH NAME function_call','foreach',3,'p_foreach','par_Class.py',333),
  ('foreach -> FOREACH error','foreach',2,'p_foreach_error','par_Class.py',337),
  ('function_call -> NAME OBRACKET call_parameters CBRACKET','function_call',4,'p_function_call','par_Class.py',342),
  ('call_parameters -> <empty>','call_parameters',0,'p_call_parameters','par_Class.py',346),
  ('call_parameters -> call_parameters COMMA expression','call_parameters',3,'p_call_parameters','par_Class.py',347),
  ('call_parameters -> expression','call_parameters',1,'p_call_parameters','par_Class.py',348),
  ('parameters -> parameters COMMA parameter','parameters',3,'p_parameters','par_Class.py',355),
  ('parameters -> parameter','parameters',1,'p_parameters','par_Class.py',356),
  ('parameter -> type NAME','parameter',2,'p_parameter','par_Class.py',363),
  ('empty -> <empty>','empty',0,'p_empty','par_Class.py',367),
]
